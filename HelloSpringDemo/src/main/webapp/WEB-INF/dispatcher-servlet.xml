<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:mvc="http://www.springframework.org/schema/mvc"
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd     
                    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<context:component-scan base-package = "com.hellospringdemo" /> <!-- scan this package for beans, services, controllers in order to create instances of them-->
	<!-- When app is deployed, request is sent to server. Request points to Controller in root folder,
	finds RequestMapping with the name and go through the method home() -->
	<mvc:annotation-driven /> <!-- we would be using annotations in java classes -->
<!-- prints String name "home" and send to viewResolver to add prefix and suffix "home". -->
<!-- Scans the files for home.jsp. System then compiles the file into plain html code to send to browser -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
		<property name="prefix" value="/WEB-INF/view/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
</beans>